classdef ExpParameter < handle
    %EXPPARAMETER objects of type experiment-parameter
    %   they can have their name, supported value-types and the actual
    %   values. also, an ExpParameter-object will alyways point to the
    %   experiment using it
    
    properties
        type
        value
        name
        exp
    end
    
    properties(Constant = true)
        TYPE_BOOLEAN = 'boolean'
        TYPE_DOUBLE = 'double'
        TYPE_VECTOR_OF_DOUBLES = 'vector of doubles'
        ALL_TYPES = {ExpParameter.TYPE_BOOLEAN, ExpParameter.TYPE_DOUBLE, ExpParameter.TYPE_VECTOR_OF_DOUBLES}
    end
    
    methods
        function validateValue(obj, 
    end
    
    %% setters
    methods
        function set.type(obj, newType)
            if ~ischar(newType);                        EventStation.anonymousError('new value for obj.type can only be one of the pre-defined types!'); end
            if ~any(strcmp(obj.ALL_TYPES, newType));    EventStation.anonymousError('new value for obj.type can only be one of the pre-defined types!'); end
            obj.type = newType;
        end
        function set.value(obj, newValue)
            if ~obj.validateValue(newValue); EventStation.anonymousError('new value for obj.value can''t pass the validation! \ntype: (%s), \nvalue: (%s)\n', obj.type, newValue);   end %#ok<MCSUP>
    end
    
end

